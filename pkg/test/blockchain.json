{
  "namespace": "blockchain",
  "imports": [],
  "declarations": [
    {
      "type": "array",
      "name": "Uint32",
      "item": "byte",
      "item_count": 4
    },
    {
      "type": "array",
      "name": "Uint64",
      "item": "byte",
      "item_count": 8
    },
    {
      "type": "array",
      "name": "Uint128",
      "item": "byte",
      "item_count": 16
    },
    {
      "type": "array",
      "name": "Byte32",
      "item": "byte",
      "item_count": 32
    },
    {
      "type": "array",
      "name": "Uint256",
      "item": "byte",
      "item_count": 32
    },
    {
      "type": "fixvec",
      "name": "Bytes",
      "item": "byte"
    },
    {
      "type": "option",
      "name": "BytesOpt",
      "item": "Bytes"
    },
    {
      "type": "dynvec",
      "name": "BytesVec",
      "item": "Bytes"
    },
    {
      "type": "fixvec",
      "name": "Byte32Vec",
      "item": "Byte32"
    },
    {
      "type": "option",
      "name": "ScriptOpt",
      "item": "Script"
    },
    {
      "type": "array",
      "name": "ProposalShortId",
      "item": "byte",
      "item_count": 10
    },
    {
      "type": "dynvec",
      "name": "UncleBlockVec",
      "item": "UncleBlock"
    },
    {
      "type": "dynvec",
      "name": "TransactionVec",
      "item": "Transaction"
    },
    {
      "type": "fixvec",
      "name": "ProposalShortIdVec",
      "item": "ProposalShortId"
    },
    {
      "type": "fixvec",
      "name": "CellDepVec",
      "item": "CellDep"
    },
    {
      "type": "fixvec",
      "name": "CellInputVec",
      "item": "CellInput"
    },
    {
      "type": "dynvec",
      "name": "CellOutputVec",
      "item": "CellOutput"
    },
    {
      "type": "table",
      "name": "Script",
      "fields": [
        {
          "name": "code_hash",
          "type": "Byte32"
        },
        {
          "name": "hash_type",
          "type": "byte"
        },
        {
          "name": "args",
          "type": "Bytes"
        }
      ]
    },
    {
      "type": "struct",
      "name": "OutPoint",
      "fields": [
        {
          "name": "tx_hash",
          "type": "Byte32"
        },
        {
          "name": "index",
          "type": "Uint32"
        }
      ]
    },
    {
      "type": "struct",
      "name": "CellInput",
      "fields": [
        {
          "name": "since",
          "type": "Uint64"
        },
        {
          "name": "previous_output",
          "type": "OutPoint"
        }
      ]
    },
    {
      "type": "table",
      "name": "CellOutput",
      "fields": [
        {
          "name": "capacity",
          "type": "Uint64"
        },
        {
          "name": "lock",
          "type": "Script"
        },
        {
          "name": "type_",
          "type": "ScriptOpt"
        }
      ]
    },
    {
      "type": "struct",
      "name": "CellDep",
      "fields": [
        {
          "name": "out_point",
          "type": "OutPoint"
        },
        {
          "name": "dep_type",
          "type": "byte"
        }
      ]
    },
    {
      "type": "table",
      "name": "RawTransaction",
      "fields": [
        {
          "name": "version",
          "type": "Uint32"
        },
        {
          "name": "cell_deps",
          "type": "CellDepVec"
        },
        {
          "name": "header_deps",
          "type": "Byte32Vec"
        },
        {
          "name": "inputs",
          "type": "CellInputVec"
        },
        {
          "name": "outputs",
          "type": "CellOutputVec"
        },
        {
          "name": "outputs_data",
          "type": "BytesVec"
        }
      ]
    },
    {
      "type": "table",
      "name": "Transaction",
      "fields": [
        {
          "name": "raw",
          "type": "RawTransaction"
        },
        {
          "name": "witnesses",
          "type": "BytesVec"
        }
      ]
    },
    {
      "type": "struct",
      "name": "RawHeader",
      "fields": [
        {
          "name": "version",
          "type": "Uint32"
        },
        {
          "name": "compact_target",
          "type": "Uint32"
        },
        {
          "name": "timestamp",
          "type": "Uint64"
        },
        {
          "name": "number",
          "type": "Uint64"
        },
        {
          "name": "epoch",
          "type": "Uint64"
        },
        {
          "name": "parent_hash",
          "type": "Byte32"
        },
        {
          "name": "transactions_root",
          "type": "Byte32"
        },
        {
          "name": "proposals_hash",
          "type": "Byte32"
        },
        {
          "name": "uncles_hash",
          "type": "Byte32"
        },
        {
          "name": "dao",
          "type": "Byte32"
        }
      ]
    },
    {
      "type": "struct",
      "name": "Header",
      "fields": [
        {
          "name": "raw",
          "type": "RawHeader"
        },
        {
          "name": "nonce",
          "type": "Uint128"
        }
      ]
    },
    {
      "type": "table",
      "name": "UncleBlock",
      "fields": [
        {
          "name": "header",
          "type": "Header"
        },
        {
          "name": "proposals",
          "type": "ProposalShortIdVec"
        }
      ]
    },
    {
      "type": "table",
      "name": "Block",
      "fields": [
        {
          "name": "header",
          "type": "Header"
        },
        {
          "name": "uncles",
          "type": "UncleBlockVec"
        },
        {
          "name": "transactions",
          "type": "TransactionVec"
        },
        {
          "name": "proposals",
          "type": "ProposalShortIdVec"
        }
      ]
    },
    {
      "type": "table",
      "name": "CellbaseWitness",
      "fields": [
        {
          "name": "lock",
          "type": "Script"
        },
        {
          "name": "message",
          "type": "Bytes"
        }
      ]
    },
    {
      "type": "table",
      "name": "WitnessArgs",
      "fields": [
        {
          "name": "lock",
          "type": "BytesOpt"
        },
        {
          "name": "input_type",
          "type": "BytesOpt"
        },
        {
          "name": "output_type",
          "type": "BytesOpt"
        }
      ]
    }
  ]
}
